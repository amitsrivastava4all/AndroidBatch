!SESSION 2016-05-06 12:31:52.358 -----------------------------------------------
eclipse.buildId=4.4.1.M20140925-0400
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jpt.dbws.eclipselink.ui 4 0 2016-05-06 12:32:18.184
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.jpt.dbws.eclipselink.ui [394]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.jpt.dbws.eclipselink.ui [osgi.identity; osgi.identity="org.eclipse.jpt.dbws.eclipselink.ui"; type="osgi.bundle"; version:Version="1.1.100.v201308271450"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.1.v20140909-1633"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.eclipse.jpt.dbws.eclipselink.ui [osgi.identity; osgi.identity="org.eclipse.jpt.dbws.eclipselink.ui"; type="osgi.bundle"; version:Version="1.1.100.v201308271450"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.eclipse.wst.common.project.facet.ui)(&(bundle-version>=1.3.0)(!(bundle-version>=2.0.0))))
     |
    provide: osgi.wiring.bundle: org.eclipse.wst.common.project.facet.ui
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.1.v20140909-1633"; singleton:="true"]

Chain 2:
  org.eclipse.jpt.dbws.eclipselink.ui [osgi.identity; osgi.identity="org.eclipse.jpt.dbws.eclipselink.ui"; type="osgi.bundle"; version:Version="1.1.100.v201308271450"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.eclipse.persistence.dbws.builder)(&(bundle-version>=2.3.0)(!(bundle-version>=3.0.0))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="2.6.0.v20140809-296a69f"; osgi.wiring.bundle="org.eclipse.persistence.dbws.builder"
  org.eclipse.persistence.dbws.builder [osgi.identity; osgi.identity="org.eclipse.persistence.dbws.builder"; type="osgi.bundle"; version:Version="2.6.0.v20140809-296a69f"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.discovery 4 0 2016-05-06 12:32:18.277
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.discovery [526]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.discovery [osgi.identity; osgi.identity="org.eclipse.m2e.discovery"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.discovery [osgi.identity; osgi.identity="org.eclipse.m2e.discovery"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.discovery [osgi.identity; osgi.identity="org.eclipse.m2e.discovery"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.editor 4 0 2016-05-06 12:32:18.418
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.editor [527]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.editor.xml; bundle-version="[1.5.0,1.6.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.editor.xml; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.editor.xml [528]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.editor [osgi.identity; osgi.identity="org.eclipse.m2e.editor"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.editor [osgi.identity; osgi.identity="org.eclipse.m2e.editor"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.editor [osgi.identity; osgi.identity="org.eclipse.m2e.editor"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.editor.xml 4 0 2016-05-06 12:32:18.534
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.editor.xml [528]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.editor.xml [osgi.identity; osgi.identity="org.eclipse.m2e.editor.xml"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.editor.xml [osgi.identity; osgi.identity="org.eclipse.m2e.editor.xml"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.editor.xml [osgi.identity; osgi.identity="org.eclipse.m2e.editor.xml"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.jdt 4 0 2016-05-06 12:32:18.671
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt [529]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.launching 4 0 2016-05-06 12:32:18.789
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.launching [531]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.launching [osgi.identity; osgi.identity="org.eclipse.m2e.launching"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.launching [osgi.identity; osgi.identity="org.eclipse.m2e.launching"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.launching [osgi.identity; osgi.identity="org.eclipse.m2e.launching"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.profiles.ui 4 0 2016-05-06 12:32:18.848
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.ui [540]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.profiles.ui [osgi.identity; osgi.identity="org.eclipse.m2e.profiles.ui"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.profiles.ui [osgi.identity; osgi.identity="org.eclipse.m2e.profiles.ui"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.profiles.ui [osgi.identity; osgi.identity="org.eclipse.m2e.profiles.ui"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.refactoring 4 0 2016-05-06 12:32:18.957
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.refactoring [541]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.refactoring [osgi.identity; osgi.identity="org.eclipse.m2e.refactoring"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.refactoring [osgi.identity; osgi.identity="org.eclipse.m2e.refactoring"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.refactoring [osgi.identity; osgi.identity="org.eclipse.m2e.refactoring"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.wtp 4 0 2016-05-06 12:32:19.055
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.wtp [543]
  Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
    -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
       org.sonatype.m2e.mavenarchiver [1026]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.jdt [529]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
       org.eclipse.m2e.wtp.overlay [547]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.wtp [osgi.identity; osgi.identity="org.eclipse.m2e.wtp"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.wtp [osgi.identity; osgi.identity="org.eclipse.m2e.wtp"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.5.11))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.wtp [osgi.identity; osgi.identity="org.eclipse.m2e.wtp"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.5.11))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.wtp.jaxrs 4 0 2016-05-06 12:32:19.175
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.wtp.jaxrs [544]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
       org.eclipse.m2e.wtp [543]
         Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
           -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
              org.sonatype.m2e.mavenarchiver [1026]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp.overlay [547]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.wtp.jaxrs [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jaxrs"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.wtp.jaxrs [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jaxrs"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.wtp.jaxrs [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jaxrs"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.wtp.jpa 4 0 2016-05-06 12:32:19.253
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.wtp.jpa [545]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="1.1.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
       org.eclipse.m2e.wtp [543]
         Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
           -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
              org.sonatype.m2e.mavenarchiver [1026]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp.overlay [547]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.wtp.jpa [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jpa"; type="osgi.bundle"; version:Version="1.1.0.e43-20140611-1648"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.wtp.jpa [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jpa"; type="osgi.bundle"; version:Version="1.1.0.e43-20140611-1648"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.wtp.jpa [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jpa"; type="osgi.bundle"; version:Version="1.1.0.e43-20140611-1648"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.wtp.jsf 4 0 2016-05-06 12:32:19.362
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.wtp.jsf [546]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
       org.eclipse.m2e.wtp [543]
         Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
           -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
              org.sonatype.m2e.mavenarchiver [1026]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp.overlay [547]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.wtp.jsf [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jsf"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.wtp.jsf [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jsf"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.wtp.jsf [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.jsf"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.wtp.overlay 4 0 2016-05-06 12:32:19.409
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.wtp.overlay [547]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.wtp.overlay [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.overlay"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.wtp.overlay [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.overlay"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.0))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.wtp.overlay [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.overlay"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.wtp.overlay.ui 4 0 2016-05-06 12:32:19.456
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.wtp.overlay.ui [548]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
       org.eclipse.m2e.wtp.overlay [547]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.wtp.overlay [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.overlay"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.wtp.overlay [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.overlay"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.0))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.wtp.overlay [osgi.identity; osgi.identity="org.eclipse.m2e.wtp.overlay"; type="osgi.bundle"; version:Version="1.1.0.20140611-1646"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.hibernate.eclipse 4 0 2016-05-06 12:32:22.476
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.hibernate.eclipse [848]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.hibernate.eclipse.console 4 0 2016-05-06 12:32:22.555
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.hibernate.eclipse.console [849]
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse [848]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.hibernate.eclipse.jdt.apt.ui 4 0 2016-05-06 12:32:22.633
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.hibernate.eclipse.jdt.apt.ui [851]
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse [848]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.hibernate.eclipse.jdt.ui 4 0 2016-05-06 12:32:22.707
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.hibernate.eclipse.jdt.ui [852]
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse [848]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.hibernate.eclipse.mapper 4 0 2016-05-06 12:32:22.803
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.hibernate.eclipse.mapper [854]
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse [848]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.forge.m2e 4 0 2016-05-06 12:32:22.856
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.forge.m2e [915]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.3.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.jdt [529]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.hibernate.jpt.core 4 0 2016-05-06 12:32:22.958
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.hibernate.jpt.core [927]
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse [848]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.hibernate.jpt.ui 4 0 2016-05-06 12:32:23.028
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.hibernate.jpt.ui [928]
  Unresolved requirement: Require-Bundle: org.jboss.tools.hibernate.jpt.core; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.jboss.tools.hibernate.jpt.core; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.jboss.tools.hibernate.jpt.core [927]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse [848]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse.console [849]
                Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
                  -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.hibernate.ui 4 0 2016-05-06 12:32:23.064
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.hibernate.ui [931]
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse [848]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.apt.core 4 0 2016-05-06 12:32:23.103
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.apt.core [965]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.jdt [529]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.jboss.tools.maven.apt.core [osgi.identity; osgi.identity="org.jboss.tools.maven.apt.core"; type="osgi.bundle"; version:Version="1.1.0.201405210909"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.jboss.tools.maven.apt.core [osgi.identity; osgi.identity="org.jboss.tools.maven.apt.core"; type="osgi.bundle"; version:Version="1.1.0.201405210909"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.1))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.jboss.tools.maven.apt.core [osgi.identity; osgi.identity="org.jboss.tools.maven.apt.core"; type="osgi.bundle"; version:Version="1.1.0.201405210909"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.1))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.apt.ui 4 0 2016-05-06 12:32:23.142
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.apt.ui [966]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.apt.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.apt.core; bundle-version="1.1.0.201405210909"; singleton:="true"
       org.jboss.tools.maven.apt.core [965]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.jdt [529]
                No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.jboss.tools.maven.apt.ui [osgi.identity; osgi.identity="org.jboss.tools.maven.apt.ui"; type="osgi.bundle"; version:Version="1.1.0.201405210909"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.jboss.tools.maven.apt.ui [osgi.identity; osgi.identity="org.jboss.tools.maven.apt.ui"; type="osgi.bundle"; version:Version="1.1.0.201405210909"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.jboss.tools.maven.apt.ui [osgi.identity; osgi.identity="org.jboss.tools.maven.apt.ui"; type="osgi.bundle"; version:Version="1.1.0.201405210909"; singleton:="true"]
    require: (osgi.wiring.bundle=org.slf4j.api)
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.cdi 4 0 2016-05-06 12:32:23.232
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.cdi [967]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
              org.jboss.tools.maven.core [969]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp [543]
                       Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                         -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                            org.sonatype.m2e.mavenarchiver [1026]
                              Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                                -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                         -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                            org.eclipse.m2e.wtp.overlay [547]
                              No resolution report for the bundle.                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="1.0.0"; resolution:="optional"
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.conversion.ui 4 0 2016-05-06 12:32:23.343
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.conversion.ui [968]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
              org.jboss.tools.maven.core [969]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp [543]
                       Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                         -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                            org.sonatype.m2e.mavenarchiver [1026]
                              Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                                -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                         -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                            org.eclipse.m2e.wtp.overlay [547]
                              No resolution report for the bundle.                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.core 4 0 2016-05-06 12:32:23.423
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.core [969]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.jdt [529]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
       org.eclipse.m2e.wtp [543]
         Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
           -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
              org.sonatype.m2e.mavenarchiver [1026]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp.overlay [547]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.hibernate 4 0 2016-05-06 12:32:23.588
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.hibernate [970]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
              org.jboss.tools.maven.core [969]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp [543]
                       Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                         -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                            org.sonatype.m2e.mavenarchiver [1026]
                              Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                                -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                         -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                            org.eclipse.m2e.wtp.overlay [547]
                              No resolution report for the bundle.                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse [848]
                No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.jbosspackaging 4 0 2016-05-06 12:32:23.741
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.jbosspackaging [971]
  Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.14.0"
    -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
       org.sonatype.m2e.mavenarchiver [1026]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.jdt [529]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.core [969]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp [543]
                Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                  -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp.overlay [547]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.jdt 4 0 2016-05-06 12:32:23.799
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.jdt [972]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.0.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.jdt [529]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.portlet 4 0 2016-05-06 12:32:24.006
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.portlet [973]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
              org.jboss.tools.maven.core [969]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp [543]
                       Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                         -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                            org.sonatype.m2e.mavenarchiver [1026]
                              Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                                -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                         -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                            org.eclipse.m2e.wtp.overlay [547]
                              No resolution report for the bundle.                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.project.examples 4 0 2016-05-06 12:32:24.362
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.project.examples [974]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.core [969]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.jdt [529]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp [543]
                Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                  -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                     org.sonatype.m2e.mavenarchiver [1026]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp.overlay [547]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.seam 4 0 2016-05-06 12:32:24.670
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.seam [975]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.ui
    -> Bundle-SymbolicName: org.jboss.tools.maven.ui; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.ui [978]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
              org.jboss.tools.maven.core [969]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp [543]
                       Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                         -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                            org.sonatype.m2e.mavenarchiver [1026]
                              Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                                -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                         -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                            org.eclipse.m2e.wtp.overlay [547]
                              No resolution report for the bundle.                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.launching [531]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.jboss.tools.seam.ui
    -> Bundle-SymbolicName: org.jboss.tools.seam.ui; bundle-version="3.6.0.Final-v20141016-1531-B66"; singleton:="true"
       org.jboss.tools.seam.ui [993]
         Unresolved requirement: Require-Bundle: org.jboss.tools.hibernate3_5; bundle-version="3.8.0"
           -> Bundle-SymbolicName: org.jboss.tools.hibernate3_5; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.jboss.tools.hibernate3_5 [934]
                Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
                  -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
                     org.hibernate.eclipse [848]
                       No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console
           -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse.console [849]
                Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
                  -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console
           -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.8.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.sourcelookup.core 4 0 2016-05-06 12:32:24.826
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.sourcelookup.core [976]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.core [969]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.jdt [529]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp [543]
                Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                  -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                     org.sonatype.m2e.mavenarchiver [1026]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp.overlay [547]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.0.0"; visibility:="reexport"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.sourcelookup.ui 4 0 2016-05-06 12:32:25.015
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.sourcelookup.ui [977]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.sourcelookup.core; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.jboss.tools.maven.sourcelookup.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.sourcelookup.core [976]
         Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core; bundle-version="1.5.0"
           -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
              org.jboss.tools.maven.core [969]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                     org.eclipse.m2e.jdt [529]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp [543]
                       Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                         -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                            org.sonatype.m2e.mavenarchiver [1026]
                              Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                                -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                         -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                            org.eclipse.m2e.wtp.overlay [547]
                              No resolution report for the bundle.                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.0.0"; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.maven.ui 4 0 2016-05-06 12:32:25.093
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.maven.ui [978]
  Unresolved requirement: Require-Bundle: org.jboss.tools.maven.core
    -> Bundle-SymbolicName: org.jboss.tools.maven.core; bundle-version="1.6.0.Final-v20141016-1914-B105"; singleton:="true"
       org.jboss.tools.maven.core [969]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"; visibility:="reexport"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
              org.eclipse.m2e.jdt [529]
                No resolution report for the bundle.         Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp; bundle-version="0.16.0"; resolution:="optional"
           -> Bundle-SymbolicName: org.eclipse.m2e.wtp; bundle-version="1.1.0.20140611-1646"; singleton:="true"
              org.eclipse.m2e.wtp [543]
                Unresolved requirement: Require-Bundle: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0"
                  -> Bundle-SymbolicName: org.sonatype.m2e.mavenarchiver; bundle-version="0.16.0.201409161210"; singleton:="true"
                     org.sonatype.m2e.mavenarchiver [1026]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.0.0,2.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.wtp.overlay; visibility:="reexport"
                  -> Bundle-SymbolicName: org.eclipse.m2e.wtp.overlay; bundle-version="1.1.0.20140611-1646"; singleton:="true"
                     org.eclipse.m2e.wtp.overlay [547]
                       No resolution report for the bundle.                Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[1.5.0,2.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.launching; bundle-version="1.5.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.launching; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.launching [531]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.jboss.tools.seam.ui 4 0 2016-05-06 12:32:25.215
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.jboss.tools.seam.ui [993]
  Unresolved requirement: Require-Bundle: org.jboss.tools.hibernate3_5; bundle-version="3.8.0"
    -> Bundle-SymbolicName: org.jboss.tools.hibernate3_5; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.jboss.tools.hibernate3_5 [934]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
              org.hibernate.eclipse [848]
                No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
       org.hibernate.eclipse.console [849]
         Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.7.0"
           -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse.console
    -> Bundle-SymbolicName: org.hibernate.eclipse.console; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.hibernate.eclipse; bundle-version="3.8.0"
    -> Bundle-SymbolicName: org.hibernate.eclipse; bundle-version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"] because it is exposed to package 'org.slf4j' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.hibernate.eclipse [osgi.identity; osgi.identity="org.hibernate.eclipse"; type="osgi.bundle"; version:Version="4.0.0.Final-v20141016-1911-B82"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.7.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.sonar.ide.eclipse.m2e 4 0 2016-05-06 12:32:25.238
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.sonar.ide.eclipse.m2e [1077]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.0.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.jdt [529]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.codehaus.groovy.m2eclipse 4 0 2016-05-06 12:32:25.286
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.codehaus.groovy.m2eclipse [1221]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="1.0.0"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="1.5.0.20140606-0033"; singleton:="true"
       org.eclipse.m2e.jdt [529]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.jdt [osgi.identity; osgi.identity="org.eclipse.m2e.jdt"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.7.2.v20121108-1250"; osgi.wiring.bundle="org.slf4j.api"
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.m2e.logback.configuration 4 0 2016-05-06 12:32:25.405
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.logback.configuration [534]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.m2e.logback.configuration [osgi.identity; osgi.identity="org.eclipse.m2e.logback.configuration"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"] because it is exposed to package 'org.slf4j.spi' from resources org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] and slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"] via two dependency chains.

Chain 1:
  org.eclipse.m2e.logback.configuration [osgi.identity; osgi.identity="org.eclipse.m2e.logback.configuration"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.slf4j.api)(bundle-version>=1.6.2))
     |
    provide: osgi.wiring.bundle: org.slf4j.api
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

Chain 2:
  org.eclipse.m2e.logback.configuration [osgi.identity; osgi.identity="org.eclipse.m2e.logback.configuration"; type="osgi.bundle"; version:Version="1.5.0.20140606-0033"; singleton:="true"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(bundle-version>=0.9.24))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.spi)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.spi
  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.2"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1562)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.jface 2 0 2016-05-06 12:40:26.632
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2016-05-06 12:40:26.632
!MESSAGE A conflict occurred for ALT+SHIFT+D G:
Binding(ALT+SHIFT+D G,
	ParameterizedCommand(Command(org.codehaus.groovy.eclipse.groovyScriptLaunchShortcut.debug,Debug Groovy Script,
		Debug Groovy Script,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5a8dfd2e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+D G,
	ParameterizedCommand(Command(org.testng.eclipse.shortcut.testngSuite.debug,Debug TestNG Suite,
		Debug TestNG Suite,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6e9c118f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2016-05-06 12:40:26.632
!MESSAGE A conflict occurred for ALT+SHIFT+X G:
Binding(ALT+SHIFT+X G,
	ParameterizedCommand(Command(org.codehaus.groovy.eclipse.groovyScriptLaunchShortcut.run,Run Groovy Script,
		Run Groovy Script,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d446ba9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+X G,
	ParameterizedCommand(Command(org.testng.eclipse.shortcut.testngSuite.run,Run TestNG Suite,
		Run TestNG Suite,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46c2451a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.mylyn.tasks.core 4 0 2016-05-06 12:40:33.114
!MESSAGE Unexpected error while loading repository template extensions
!SUBENTRY 1 org.eclipse.mylyn.tasks.core 4 0 2016-05-06 12:40:33.114
!MESSAGE Could not load repository template extension contributed by 'org.springsource.ide.eclipse.dashboard.ui' with connectorKind 'jira'
!SUBENTRY 1 org.eclipse.mylyn.tasks.core 4 0 2016-05-06 12:40:33.114
!MESSAGE Could not load repository template extension contributed by 'org.springsource.ide.eclipse.dashboard.ui' with connectorKind 'jira'

!ENTRY org.eclipse.egit.ui 2 0 2016-05-06 12:41:19.149
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\arnav'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.osgi 4 0 2016-05-06 12:41:19.443
!MESSAGE An error occurred while automatically activating bundle org.eclipse.m2e.core (524).
!STACK 0
org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.jboss.tools.forge.ui.internal.startup.ForgeStarter.earlyStartup(ForgeStarter.java:18)
	at org.eclipse.ui.internal.EarlyStartupRunnable.runEarlyStartup(EarlyStartupRunnable.java:89)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2755)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.lang.IncompatibleClassChangeError: Class ch.qos.logback.classic.LoggerContext does not implement the requested interface org.slf4j.ILoggerFactory
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:270)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:281)
	at org.eclipse.m2e.core.internal.MavenPluginActivator.<init>(MavenPluginActivator.java:88)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 39 more
Root exception:
java.lang.IncompatibleClassChangeError: Class ch.qos.logback.classic.LoggerContext does not implement the requested interface org.slf4j.ILoggerFactory
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:270)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:281)
	at org.eclipse.m2e.core.internal.MavenPluginActivator.<init>(MavenPluginActivator.java:88)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.jboss.tools.forge.ui.internal.startup.ForgeStarter.earlyStartup(ForgeStarter.java:18)
	at org.eclipse.ui.internal.EarlyStartupRunnable.runEarlyStartup(EarlyStartupRunnable.java:89)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2755)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.osgi 4 0 2016-05-06 12:41:19.447
!MESSAGE An error occurred while automatically activating bundle org.jboss.tools.forge.core (913).
!STACK 0
org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.jboss.tools.forge.ui.internal.startup.ForgeStarter.earlyStartup(ForgeStarter.java:18)
	at org.eclipse.ui.internal.EarlyStartupRunnable.runEarlyStartup(EarlyStartupRunnable.java:89)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2755)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.lang.NoClassDefFoundError: org/eclipse/m2e/core/embedder/IMavenConfigurationChangeListener
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 18 more
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.m2e.core (524).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:116)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 27 more
Caused by: org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	... 36 more
Caused by: java.lang.IncompatibleClassChangeError: Class ch.qos.logback.classic.LoggerContext does not implement the requested interface org.slf4j.ILoggerFactory
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:270)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:281)
	at org.eclipse.m2e.core.internal.MavenPluginActivator.<init>(MavenPluginActivator.java:88)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 39 more
Root exception:
java.lang.NoClassDefFoundError: org/eclipse/m2e/core/embedder/IMavenConfigurationChangeListener
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.jboss.tools.forge.ui.internal.startup.ForgeStarter.earlyStartup(ForgeStarter.java:18)
	at org.eclipse.ui.internal.EarlyStartupRunnable.runEarlyStartup(EarlyStartupRunnable.java:89)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2755)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.m2e.core (524).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:116)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 27 more
Caused by: org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	... 36 more
Caused by: java.lang.IncompatibleClassChangeError: Class ch.qos.logback.classic.LoggerContext does not implement the requested interface org.slf4j.ILoggerFactory
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:270)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:281)
	at org.eclipse.m2e.core.internal.MavenPluginActivator.<init>(MavenPluginActivator.java:88)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 39 more

!ENTRY org.eclipse.ui.workbench 4 2 2016-05-06 12:41:19.449
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NoClassDefFoundError: org/jboss/tools/forge/core/preferences/ForgeCorePreferences
	at org.jboss.tools.forge.ui.internal.startup.ForgeStarter.earlyStartup(ForgeStarter.java:18)
	at org.eclipse.ui.internal.EarlyStartupRunnable.runEarlyStartup(EarlyStartupRunnable.java:89)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2755)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.jboss.tools.forge.core (913).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:116)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 6 more
Caused by: org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	... 15 more
Caused by: java.lang.NoClassDefFoundError: org/eclipse/m2e/core/embedder/IMavenConfigurationChangeListener
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 18 more
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.m2e.core (524).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:116)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 27 more
Caused by: org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	... 36 more
Caused by: java.lang.IncompatibleClassChangeError: Class ch.qos.logback.classic.LoggerContext does not implement the requested interface org.slf4j.ILoggerFactory
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:270)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:281)
	at org.eclipse.m2e.core.internal.MavenPluginActivator.<init>(MavenPluginActivator.java:88)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 39 more

!ENTRY org.eclipse.ui 4 4 2016-05-06 12:41:19.502
!MESSAGE Unhandled Exception

!ENTRY org.jboss.tools.forge.ui 4 0 2016-05-06 12:41:19.502
!MESSAGE Unable to execute early startup code for an extension
!STACK 0
java.lang.NoClassDefFoundError: org/jboss/tools/forge/core/preferences/ForgeCorePreferences
	at org.jboss.tools.forge.ui.internal.startup.ForgeStarter.earlyStartup(ForgeStarter.java:18)
	at org.eclipse.ui.internal.EarlyStartupRunnable.runEarlyStartup(EarlyStartupRunnable.java:89)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2755)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.jboss.tools.forge.core (913).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:116)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 6 more
Caused by: org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	... 15 more
Caused by: java.lang.NoClassDefFoundError: org/eclipse/m2e/core/embedder/IMavenConfigurationChangeListener
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 18 more
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.m2e.core (524).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:116)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:391)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 27 more
Caused by: org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	... 36 more
Caused by: java.lang.IncompatibleClassChangeError: Class ch.qos.logback.classic.LoggerContext does not implement the requested interface org.slf4j.ILoggerFactory
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:270)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:281)
	at org.eclipse.m2e.core.internal.MavenPluginActivator.<init>(MavenPluginActivator.java:88)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 39 more

!ENTRY org.eclipse.wst.common.project.facet.core 4 0 2016-05-06 13:43:46.515
!MESSAGE Project facet grails.app has not been defined. It is used in plugin com.vmware.vfabric.ide.eclipse.tcserver.core.

!ENTRY org.eclipse.osgi 2 0 2016-05-06 13:47:10.267
!MESSAGE While loading class "org.jboss.tools.jst.web.webapp.model.FileWebAppRecognizer", thread "Thread[Worker-34,5,main]" timed out waiting (5001ms) for thread "Thread[Worker-41,5,main]" to finish starting bundle "org.jboss.tools.jst.web_3.6.0.Final-v20141016-0045-B76 [960]". To avoid deadlock, thread "Thread[Worker-34,5,main]" is proceeding but "org.jboss.tools.jst.web.webapp.model.FileWebAppRecognizer" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="org.jboss.tools.jst.web"; type="osgi.bundle"; version:Version="3.6.0.Final-v20141016-0045-B76"; singleton:="true" [id=960] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:568)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.jboss.tools.common.model.util.ModelFeatureFactory.createFeatureInstance(ModelFeatureFactory.java:78)
	at org.jboss.tools.common.model.loaders.impl.ModelEntityRecognizer.find(ModelEntityRecognizer.java:89)
	at org.jboss.tools.common.model.loaders.impl.ModelEntityRecognizer.access$0(ModelEntityRecognizer.java:87)
	at org.jboss.tools.common.model.loaders.impl.ModelEntityRecognizer$EntityRecognizerWrapper.checkResolved(ModelEntityRecognizer.java:161)
	at org.jboss.tools.common.model.loaders.impl.ModelEntityRecognizer$EntityRecognizerWrapper.getEntityName(ModelEntityRecognizer.java:168)
	at org.jboss.tools.common.model.loaders.impl.ModelEntityRecognizer.getEntityName(ModelEntityRecognizer.java:33)
	at org.jboss.tools.common.model.ui.editor.XMLContentDescriber.describe(XMLContentDescriber.java:47)
	at org.jboss.tools.common.model.ui.editor.XMLContentDescriber.describe(XMLContentDescriber.java:34)
	at org.eclipse.core.internal.content.ContentTypeCatalog.describe(ContentTypeCatalog.java:218)
	at org.eclipse.core.internal.content.ContentTypeCatalog.collectMatchingByContents(ContentTypeCatalog.java:190)
	at org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(ContentTypeCatalog.java:403)
	at org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(ContentTypeCatalog.java:450)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:346)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:360)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:86)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:445)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:355)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:272)
	at org.eclipse.wst.validation.internal.ContentTypeWrapper.getContentType(ContentTypeWrapper.java:36)
	at org.eclipse.wst.validation.internal.model.FilterRule$ContentType.matchesResource(FilterRule.java:522)
	at org.eclipse.wst.validation.internal.model.FilterGroup.shouldValidate(FilterGroup.java:181)
	at org.eclipse.wst.validation.Validator$V2.shouldValidate(Validator.java:1114)
	at org.eclipse.wst.validation.Validator.shouldValidate(Validator.java:320)
	at org.eclipse.wst.validation.Friend.shouldValidate(Friend.java:50)
	at org.eclipse.wst.validation.internal.ValManager.accept(ValManager.java:800)
	at org.eclipse.wst.validation.internal.ValManager.validate(ValManager.java:669)
	at org.eclipse.wst.validation.internal.ValBuilderJob$Visitor.visit(ValBuilderJob.java:299)
	at org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:126)
	at org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:85)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:86)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:86)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:86)
	at org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:127)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:95)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:52)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:124)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:108)
	at org.eclipse.wst.validation.internal.ValBuilderJob.fullBuild(ValBuilderJob.java:219)
	at org.eclipse.wst.validation.internal.ValBuilderJob.run(ValBuilderJob.java:178)
	at org.eclipse.wst.validation.internal.ValBuilderJob.runInWorkspace(ValBuilderJob.java:126)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.equinox.p2.core 4 0 2016-05-06 14:18:09.241
!MESSAGE Provisioning exception
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: Unable to read repository at http://download.eclipse.org/technology/m2e/releases/compositeContent.xml.
	at org.eclipse.equinox.internal.p2.repository.CacheManager.createCache(CacheManager.java:192)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.getLocalFile(CompositeMetadataRepositoryFactory.java:73)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:98)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:668)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:668)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.p2.ui.LoadMetadataRepositoryJob.doLoad(LoadMetadataRepositoryJob.java:117)
	at org.eclipse.equinox.p2.ui.LoadMetadataRepositoryJob.runModal(LoadMetadataRepositoryJob.java:102)
	at org.eclipse.equinox.internal.p2.ui.sdk.PreloadingRepositoryHandler$2.runModal(PreloadingRepositoryHandler.java:83)
	at org.eclipse.equinox.p2.operations.ProvisioningJob.run(ProvisioningJob.java:177)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Caused by: java.net.SocketException: Socket operation on nonsocket: configureBlocking
	at java.net.DualStackPlainSocketImpl.configureBlocking(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:127)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:294)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:643)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:479)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:259)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	... 1 more
!SUBENTRY 1 org.eclipse.equinox.p2.transport.ecf 4 1002 2016-05-06 14:18:09.305
!MESSAGE Unable to read repository at http://download.eclipse.org/technology/m2e/releases/compositeContent.xml.
!STACK 0
java.net.SocketException: Socket operation on nonsocket: configureBlocking
	at java.net.DualStackPlainSocketImpl.configureBlocking(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:127)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:294)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:643)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:479)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:259)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SESSION 2016-05-06 14:18:56.272 -----------------------------------------------
eclipse.buildId=4.5.0.I20140806-2000
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.ui 2 0 2016-05-06 14:20:25.794
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\arnav'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.equinox.p2.core 4 0 2016-05-06 14:23:40.112
!MESSAGE Provisioning exception
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: No repository found at http://download.eclipse.org/technology/m2e/releases-for-indigo/1.4/.
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.fail(AbstractRepositoryManager.java:395)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:692)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:668)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:668)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.p2.ui.LoadMetadataRepositoryJob.doLoad(LoadMetadataRepositoryJob.java:117)
	at org.eclipse.equinox.p2.ui.LoadMetadataRepositoryJob.runModal(LoadMetadataRepositoryJob.java:102)
	at org.eclipse.equinox.internal.p2.ui.sdk.PreloadingRepositoryHandler$2.runModal(PreloadingRepositoryHandler.java:83)
	at org.eclipse.equinox.p2.operations.ProvisioningJob.run(ProvisioningJob.java:177)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
!SUBENTRY 1 org.eclipse.equinox.p2.metadata.repository 4 1000 2016-05-06 14:23:40.150
!MESSAGE No repository found at http://download.eclipse.org/technology/m2e/releases-for-indigo/1.4/.
